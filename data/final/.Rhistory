library(tidyr)
data_wide <- pivot_wider(data, names_from = System, values_from = PHE.mean)
View(data_wide)
# Create separate time series objects for each river and age combination
ts_river1_age2 <- ts(data_wide$Egegik[data_wide$Age == 2],
start = 2022, frequency = 1)
data_wide[, ]
data_wide[, data_wide$Egegik & data_wide$Sample.ID & data_wide$Year,
data_wide$Trophic.Position,data_wide$Age]
data_wide[, c(data_wide$Egegik & data_wide$Sample.ID & data_wide$Year,
data_wide$Trophic.Position,data_wide$Age)]
data_wide[, c("Egegik", "Sample.ID", "Year",
"Trophic.Position", "Age")]
# Create data frames for each of the river systems
Eg <- data_wide[, c("Egegik", "Sample.ID", "Year",
"Trophic.Position", "Age")]
View(Eg)
# Create data frames for each of the river systems
Eg <- data_wide[, c("Egegik", "Year",
"Trophic.Position", "Age")]
View(Eg)
systems
Eg[Eg$Egegik == "NA", ]
# Get rid of years from other systems
Eg <- Eg[-Eg$Egegik == "NA", ]
Eg <- Eg[Eg$Egegik == "NA", ]
Eg[!(Eg$Egegik == "NA"), ]
Eg <- Eg[Eg$Egegik == "NA", ]
# Create data frames for each of the river systems
Eg <- data_wide[, c("Egegik", "Year",
"Trophic.Position", "Age")]
# Get rid of years from other systems
Eg <- Eg[!Eg$Egegik == "NA", ]
# Get rid of years from other systems
Eg <- !Eg[Eg$Egegik == "NA", ]
# Create data frames for each of the river systems
Eg <- data_wide[, c("Egegik", "Year",
"Trophic.Position", "Age")]
# Get rid of years from other systems
Eg <- Eg[-Eg$Egegik == "NA", ]
View(Eg)
# Create data frames for each of the river systems
Eg <- data_wide[, c("Egegik", "Year",
"Trophic.Position", "Age")]
# Get rid of years from other systems
Eg <- Eg[Eg$Egegik == "NA", ]
# Create data frames for each of the river systems
Eg <- data_wide[, c("Egegik", "Year",
"Trophic.Position", "Age")]
Eg[!is.na(Eg$Egegik), ]
# Get rid of years from other systems
Eg <- Eg[!is.na(Eg$Egegik), ]
Kvi <- data_wide[, c("Kvichak", "Year",
"Trophic.Position", "Age")]
View(Kvi)
View(Eg)
Wood <- data_wide[, c("Wood", "Year",
"Trophic.Position", "Age")]
View(Wood)
Kvi <- Kvi[!is.na(Kvi$Kvichak), ]
Wood <- Wood[!is.na(Wood$Wood), ]
View(Kvi)
#load packages
library(changepoint)
# Remove rows with NAs
data <- na.omit(data)
# Reverse the order of rows in the data frame so that the oldest year is at the top
data <- data[order(data$Year, decreasing = TRUE), ]
# Convert data to a time series object
ts_data <- ts(data$PHE.mean, start = data$Year[length(data$Year)], end = data$Year[1])
# Perform change point analysis using the 'cpt.mean' function
cpt_result <- cpt.mean(ts_data)
# Plot the change point analysis results
plot(cpt_result, cpt.col = "blue")
summary(cpt_result)
View(data)
Eg[Eg$Age == "2",]
# Separate by Age class
Eg_2 <- Eg[Eg$Age == "2",]
Eg_3 <- Eg[Eg$Age == "3",]
View(Eg_3)
# Add NAs where they are missing
newrow <- c(NA, "2019", NA, "3")
newrow
# Add NAs where they are missing
newrow <- c(NA, "2019", NA, "3")
insertRow <- function(existingDF, newrow, r) {
existingDF[seq(r+1,nrow(existingDF)+1),] <- existingDF[seq(r,nrow(existingDF)),]
existingDF[r,] <- newrow
existingDF
}
insertRow(Eg, newrow, 3)
existingDF <- as.data.frame(matrix(seq(20),nrow=5,ncol=4))
existingDF
r <- 3
newrow <- seq(4)
newrow
r
existingDF
insertRow <- function(existingDF, newrow, r) {
existingDF[seq(r+1,nrow(existingDF)+1),] <- existingDF[seq(r,nrow(existingDF)),]
existingDF[r,] <- newrow
existingDF
}
insertRow(existingDF, newrow, r)
# Add NAs where they are missing
newrow <- c(NA, "2019", NA, "3")
insertRow(Eg, newrow, r)
existingDF <- as.data.frame(matrix(seq(20),nrow=5,ncol=4))
r <- 3
newrow <- seq(4)
seq(r+1,nrow(existingDF)+1)
?seq
nrow(existingDF)
existingDF
seq(r+1,nrow(existingDF)+1)
Eg[3,]
# Add NAs where they are missing
newrow <- c(NA, "2019", NA, "3")
Eg[3,] <- newrow
Eg[3,]
# Get rid of years from other systems
Eg <- as.data.frame(Eg[!is.na(Eg$Egegik), ])
Kvi <- as.data.frame(Kvi[!is.na(Kvi$Kvichak), ])
Wood <- as.data.frame(Wood[!is.na(Wood$Wood), ])
Eg[3,] <- newrow
Eg[3,]
# Get rid of years from other systems
Eg <- as.data.frame(Eg[!is.na(Eg$Egegik), ])
Kvi <- as.data.frame(Kvi[!is.na(Kvi$Kvichak), ])
Wood <- as.data.frame(Wood[!is.na(Wood$Wood), ])
insertRow(Eg, newrow, 3)
# Create data frames for each of the river systems
Eg <- data_wide[, c("Egegik", "Year",
"Trophic.Position", "Age")]
Kvi <- data_wide[, c("Kvichak", "Year",
"Trophic.Position", "Age")]
Wood <- data_wide[, c("Wood", "Year",
"Trophic.Position", "Age")]
# Get rid of years from other systems
Eg <- as.data.frame(Eg[!is.na(Eg$Egegik), ])
Kvi <- as.data.frame(Kvi[!is.na(Kvi$Kvichak), ])
Wood <- as.data.frame(Wood[!is.na(Wood$Wood), ])
existingDF <- as.data.frame(matrix(seq(20),nrow=5,ncol=4))
r <- 3
newrow <- seq(4)
existingDF
r <- 3
newrow
existingDF[seq(r+1,nrow(existingDF)+1),]
existingDF[seq(r,nrow(existingDF)),]
existingDF[seq(r+1,nrow(existingDF)+1),] <- existingDF[seq(r,nrow(existingDF)),]
existingDF
existingDF[r,] <- newrow
existingDF
newrow <- c(NA, "2019", NA, "3")
insertRow(Eg, newrow, r = 3)
Eg
Eg <- insertRow(Eg, newrow, r = 3)
Eg
Eg
View(Eg)
newrow <- c(NA, "2016", NA, "3")
Eg <- insertRow(Eg, newrow, r = 5)
newrow <- c(NA, "1992", NA, "3")
Eg <- insertRow(Eg, newrow, r = 21)
newrow <- c(NA, "1986", NA, "3")
Eg <- insertRow(Eg, newrow, r = 25)
newrow <- c(NA, "1983", NA, "2")
Eg <- insertRow(Eg, newrow, r = 27)
newrow <- c(NA, "1983", NA, "3")
Eg <- insertRow(Eg, newrow, r = 27)
newrow <- c(NA, "1980", NA, "2")
Eg <- insertRow(Eg, newrow, r = 29)
newrow <- c(NA, "1980", NA, "3")
Eg <- insertRow(Eg, newrow, r = 30)
newrow <- c(NA, "1974", NA, "3")
Eg <- insertRow(Eg, newrow, r = 33)
newrow <- c(NA, "1965", NA, "3")
Eg <- insertRow(Eg, newrow, r = 39)
View(Kvi)
newrow <- c(NA, "2016", NA, "3") #repeat for Kvichak
Kvi <- insertRow(Kvi, newrow, r = 5)
newrow <- c(NA, "2016", NA, "3") #repeat for Kvichak
Kvi <- insertRow(Kvi, newrow, r = 5)
Kvi <- data_wide[, c("Kvichak", "Year",
"Trophic.Position", "Age")]
Kvi <- as.data.frame(Kvi[!is.na(Kvi$Kvichak), ])
newrow <- c(NA, "2016", NA, "3") #repeat for Kvichak
Kvi <- insertRow(Kvi, newrow, r = 5)
newrow <- c(NA, "2010", NA, "3")
Kvi <- insertRow(Kvi, newrow, r = 9)
newrow <- c(NA, "2007", NA, "3")
Kvi <- insertRow(Kvi, newrow, r = 11)
newrow <- c(NA, "1998", NA, "3")
Kvi <- insertRow(Kvi, newrow, r = 17)
newrow <- c(NA, "1995", NA, "3")
Kvi <- insertRow(Kvi, newrow, r = 19)
newrow <- c(NA, "1995", NA, "3")
Kvi <- insertRow(Kvi, newrow, r = 19)
Kvi <- data_wide[, c("Kvichak", "Year",
"Trophic.Position", "Age")]
Kvi <- as.data.frame(Kvi[!is.na(Kvi$Kvichak), ])
newrow <- c(NA, "2016", NA, "3") #repeat for Kvichak
Kvi <- insertRow(Kvi, newrow, r = 5)
newrow <- c(NA, "2010", NA, "3")
Kvi <- insertRow(Kvi, newrow, r = 9)
newrow <- c(NA, "2007", NA, "3")
Kvi <- insertRow(Kvi, newrow, r = 11)
newrow <- c(NA, "1998", NA, "3")
Kvi <- insertRow(Kvi, newrow, r = 17)
newrow <- c(NA, "1995", NA, "3")
Kvi <- insertRow(Kvi, newrow, r = 19)
newrow <- c(NA, "1993", NA, "3")
Kvi <- insertRow(Kvi, newrow, r = 21)
newrow <- c(NA, "1989", NA, "3")
Kvi <- insertRow(Kvi, newrow, r = 23)
newrow <- c(NA, "1986", NA, "2")
Kvi <- insertRow(Kvi, newrow, r = 25)
newrow <- c(NA, "1986", NA, "3")
Kvi <- insertRow(Kvi, newrow, r = 25)
newrow <- c(NA, "1983", NA, "3")
Kvi <- insertRow(Kvi, newrow, r = 27)
newrow <- c(NA, "1980", NA, "3")
Kvi <- insertRow(Kvi, newrow, r = 29)
newrow <- c(NA, "1977", NA, "3")
Kvi <- insertRow(Kvi, newrow, r = 31)
newrow <- c(NA, "1974", NA, "3")
Kvi <- insertRow(Kvi, newrow, r = 33)
newrow <- c(NA, "1968", NA, "3")
Kvi <- insertRow(Kvi, newrow, r = 37)
newrow <- c(NA, "1965", NA, "3")
Kvi <- insertRow(Kvi, newrow, r = 39)
View(Wood)
newrow <- c(NA, "2019", NA, "3") #repeat for Wood
Wood <- insertRow(Wood, newrow, r = 5)
Wood <- data_wide[, c("Wood", "Year",
"Trophic.Position", "Age")]
Wood <- as.data.frame(Wood[!is.na(Wood$Wood), ])
newrow <- c(NA, "2019", NA, "3") #repeat for Wood
Wood <- insertRow(Wood, newrow, r = 3)
newrow <- c(NA, "2010", NA, "3")
Wood <- insertRow(Wood, newrow, r = 9)
newrow <- c(NA, "2007", NA, "3")
Wood <- insertRow(Wood, newrow, r = 11)
newrow <- c(NA, "1998", NA, "3")
Wood <- insertRow(Wood, newrow, r = 17)
newrow <- c(NA, "1984", NA, "3")
Wood <- insertRow(Wood, newrow, r = 27)
newrow <- c(NA, "1980", NA, "3")
Wood <- insertRow(Wood, newrow, r = 29)
newrow <- c(NA, "1974", NA, "3")
Wood <- insertRow(Wood, newrow, r = 33)
newrow <- c(NA, "1965", NA, "3")
Wood <- insertRow(Wood, newrow, r = 39)
?ts
#### Create Time Series Objects ####
ts_Eg <- ts(Eg, start = 2022, frequency = 2)
View(Eg)
# Reverse the order of rows in the data frame so that the oldest year is at the top
Eg <- Eg[order(Eg$Year, decreasing = TRUE), ]
ts_Eg <- ts(Eg$Egegik,
start = Eg$Egegik[length(Eg$Year)],
end = Eg$Year[1],
frequency = 2)
Eg$Year[1]
View(ts_Eg)
# Reverse the order of rows in the data frame so that the oldest year is at the top
Eg <- Eg[order(Eg$Year, decreasing = TRUE), ]
Eg$Egegik[length(Eg$Year)
Eg$Egegik[length(Eg$Year)
length(Eg$Year)
Eg$Year[1]
Eg$Year[length(Eg$Year)]
ts_Eg <- ts(Eg$Egegik,
start = Eg$Year[length(Eg$Year)],
end = Eg$Year[1],
frequency = 2)
ts_Eg
length(Eg$Year)
Eg$Year[40]
# Create data frames for each of the river systems
Eg <- data_wide[, c("Egegik", "Year",
"Trophic.Position", "Age")]
# Get rid of years from other systems
Eg <- as.data.frame(Eg[!is.na(Eg$Egegik), ])
#### Running function for all missing rows for Egegik ####
newrow <- c(NA, "2019", NA, "3")
Eg <- insertRow(Eg, newrow, r = 3)
newrow <- c(NA, "2016", NA, "3")
Eg <- insertRow(Eg, newrow, r = 5)
newrow <- c(NA, "1992", NA, "3")
Eg <- insertRow(Eg, newrow, r = 21)
newrow <- c(NA, "1986", NA, "3")
Eg <- insertRow(Eg, newrow, r = 25)
newrow <- c(NA, "1983", NA, "2")
Eg <- insertRow(Eg, newrow, r = 27)
newrow <- c(NA, "1983", NA, "3")
Eg <- insertRow(Eg, newrow, r = 27)
newrow <- c(NA, "1980", NA, "2")
Eg <- insertRow(Eg, newrow, r = 29)
newrow <- c(NA, "1980", NA, "3")
Eg <- insertRow(Eg, newrow, r = 30)
newrow <- c(NA, "1974", NA, "3")
Eg <- insertRow(Eg, newrow, r = 33)
newrow <- c(NA, "1965", NA, "3")
Eg <- insertRow(Eg, newrow, r = 39)
ts_Eg <- ts(Eg$Egegik,
start = Eg$Year[40],
end = Eg$Year[1],
frequency = 2)
ts_Eg
# Reverse the order of rows in the data frame so that the oldest year is at the top
Eg <- Eg[order(Eg$Year, decreasing = TRUE), ]
ts_Eg <- ts(Eg$Egegik,
start = Eg$Year[40],
end = Eg$Year[1],
frequency = 2)
cpt_result <- cpt.mean(ts_Eg)
as.numeric(Eg$Egegik)
ts_Eg <- ts(Eg$Egegik,
start = Eg$Year[40],
end = Eg$Year[1],
frequency = 2)
cpt_result <- cpt.mean(ts_Eg)
cpt_result <- cpt.mean(as.numeric(ts_Eg))
View(Wood)
Wood[Wood$Age == "2",]
Wood[Wood$Age == "2", "Wood"]
as.numeric(Wood[Wood$Age == "2", "Wood"])
#### Create Time Series Objects ####
ts_Wood <- ts(as.numeric(Wood[Wood$Age == "2", "Wood"]),
start = Wood$Year[40],
end = Wood$Year[1],
frequency = 1)
Wood$Year[1]
cpt_result <- cpt.mean(as.numeric(ts_Wood))
plot(cpt_result, cpt.col = "blue")
View(data)
View(data_wide)
data <- read.csv(file = "data.csv")
View(data)
# Convert data to a time series object
ts_data <- ts(data$PHE.mean,
start = data$Year[length(data$Year)],
end = data$Year[1],
frequency = 6)
# Perform change point analysis using the 'cpt.mean' function
cpt_result <- cpt.mean(ts_data)
View(data)
# Make a column of average PHE across all ages and systems (should have one data point per year)
data %>%
group_by(Year) %>%
summarise(avg = mean(PHE.mean))
# Make a column of average PHE across all ages and systems (should have one data point per year)
library(dplyr)
data %>%
group_by(Year) %>%
summarise(avg = mean(PHE.mean))
# Make a column of average PHE across all ages and systems (should have one data point per year)
library(dplyr)
avg_data <- data %>%
group_by(Year) %>%
summarise(avg_PHE = mean(PHE.mean, na.rm = TRUE))
print(avg_data)
View(avg_data)
length(avg_data$Year)
avg_data$Year[1]
# Convert data to a time series object
ts_data <- ts(avg_data$avg_PHE,
start = avg_data$Year[1],
end = avg_data$Year[length(avg_data$Year)],
frequency = 1)
# Perform change point analysis using the 'cpt.mean' function
cpt_result <- cpt.mean(ts_data)
# Plot the change point analysis results
plot(cpt_result, cpt.col = "blue")
summary(cpt_result)
plot(avg_data_)
plot(avg_data)
# Plot the change point analysis results
plot(cpt_result, cpt.col = "blue")
summary(cpt_result)
avg_data_all <- data %>%
group_by(Year) %>%
summarise(avg_PHE = mean(PHE.mean, na.rm = TRUE))
print(avg_data_all)
plot(avg_data_all)
View(data)
data[data$Age = "2",]
data[data$Age == "2",]
# Average PHE across all systems with only age 2
age.2 <- data[data$Age == "2",]
View(age.2)
# Average PHE across all ages and systems (should have one data point per year)
data[2, c(113, 114)] = "1968"
# Average PHE across all ages and systems (should have one data point per year)
data[2, 113] = "1968"
# Average PHE across all ages and systems (should have one data point per year)
data[113, 2] = "1968"
# Average PHE across all ages and systems (should have one data point per year)
data[c(113,114), 2] = "1968"
library(dplyr)
avg_data_all <- data %>%
group_by(Year) %>%
summarise(avg_PHE = mean(PHE.mean, na.rm = TRUE))
print(avg_data_all)
plot(avg_data_all)
# Convert data to a time series object
ts_data <- ts(avg_data_all$avg_PHE,
start = avg_data_all$Year[1],
end = avg_data_all$Year[length(avg_data_all$Year)],
frequency = 1)
ts_data
# Perform change point analysis using the 'cpt.mean' function
cpt_result <- cpt.mean(ts_data)
# Plot the change point analysis results
plot(cpt_result, cpt.col = "blue")
summary(cpt_result)
# Average PHE across all systems with only age 2
age.2 <- data[data$Age == "2",]
data[c(79,80), 2] = "1983"
library(dplyr)
avg_data_all <- data %>%
group_by(Year) %>%
summarise(avg_PHE = mean(PHE.mean, na.rm = TRUE))
print(avg_data_all)
ts_Eg
avg_data_all
avg_data_all
print(n = ...)
View(avg_data_all)
data[c(61,62), 2] = "1992"
# Average PHE across all ages and systems (should have one data point per year)
data[c(113,114), 2] = "1968" #changing the two 1967s to 1968s to have consistent spacing of years
data[c(79,80), 2] = "1983"
data[c(61,62), 2] = "1992"
library(dplyr)
avg_data_all <- data %>%
group_by(Year) %>%
summarise(avg_PHE = mean(PHE.mean, na.rm = TRUE))
print(avg_data_all)
# Convert data to a time series object
ts_data <- ts(avg_data_all$avg_PHE,
start = avg_data_all$Year[1],
end = avg_data_all$Year[length(avg_data_all$Year)],
frequency = 1)
# Perform change point analysis using the 'cpt.mean' function
cpt_result <- cpt.mean(ts_data)
# Plot the change point analysis results
plot(cpt_result, cpt.col = "blue")
View(avg_data_all)
plot(avg_data_all)
source("~/Documents/GitHub/CSIA_lab_work/code/ChangePointAnalysis.R", echo=TRUE)
# Average PHE across all systems with only age 2
age.2 <- data[data$Age == "2",]
View(age.2)
# Average PHE across all systems with only age 2
age.2 <- data[data$Age == "2",]
avg_data_2 <- age.2 %>%
group_by(Year) %>%
summarise(avg_PHE = mean(PHE.mean, na.rm = TRUE))
View(avg_data_2)
# Average PHE across all systems with only age 2
age.2 <- data[data$Age == "2",]
# Average PHE across all ages and systems (should have one data point per year)
data[c(113,114), 2] = "1968" #changing the two 1967s to 1968s to have consistent spacing of years
data[c(79,80), 2] = "1983"
data[c(61,62), 2] = "1992"
library(dplyr)
avg_data_all <- data %>%
group_by(Year) %>%
summarise(avg_PHE = mean(PHE.mean, na.rm = TRUE))
print(avg_data_all)
plot(avg_data_all)
# Convert data to a time series object
ts_data <- ts(avg_data_all$avg_PHE,
start = avg_data_all$Year[1],
end = avg_data_all$Year[length(avg_data_all$Year)],
frequency = 1)
# Perform change point analysis using the 'cpt.mean' function
cpt_result <- cpt.mean(ts_data)
# Plot the change point analysis results
plot(cpt_result, cpt.col = "blue")
summary(cpt_result)
# Average PHE across all systems with only age 2
age.2 <- data[data$Age == "2",]
library(dplyr)
avg_data_2 <- age.2 %>%
group_by(Year) %>%
summarise(avg_PHE = mean(PHE.mean, na.rm = TRUE))
# Convert data to a time series object
ts_data_2 <- ts(avg_data_2$avg_PHE,
start = avg_data_2$Year[1],
end = avg_data_2$Year[length(avg_data_2$Year)],
frequency = 1)
plot(avg_data_2)
# Convert data to a time series object
ts_data_2 <- ts(avg_data_2$avg_PHE,
start = avg_data_2$Year[1],
end = avg_data_2$Year[length(avg_data_2$Year)],
frequency = 1)
# Perform change point analysis using the 'cpt.mean' function
cpt_result_2 <- cpt.mean(ts_data_2)
# Plot the change point analysis results
plot(cpt_result_2, cpt.col = "blue")
summary(cpt_result)
ts_data_2
avg_data_2$Year[1]
avg_data_2$Year[length(avg_data_2$Year)]
setwd("~/Documents/GitHub/CSIA_lab_work/data/final")
data <- read.csv(file = "data.csv")
