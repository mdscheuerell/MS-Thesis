y = data$mortality,
xlab = "Crown Height (m)",
ylab = "Proportion of Mortality")
lines(x = newdata_mean$zmax, y = p_hat_mean)
lines(x = newdata_mean$zmax, y = p_hat_humid)
lines(x = newdata_mean$zmax, y = p_hat_dry)
plot(x = data$zmax,
y = data$mortality,
xlab = "Crown Height (m)",
ylab = "Proportion of Mortality")
lines(x = newdata_mean$zmax, y = p_hat_mean)
lines(x = newdata_mean$zmax, y = p_hat_humid)
lines(x = newdata_mean$zmax, y = p_hat_dry)
# Get fitted values from mean humidity data
newdata_mean <- data.frame(zmax = seq(min(data$zmax), max(data$zmax), length.out = 100))
eta_mean <- predict(mean_mod, newdata_mean)
p_hat_mean <- 1 / (1 + exp(-eta_mean))
# Get fitted values from humid humidity data
eta_humid <- predict(humid_mod, newdata_mean)
p_hat_humid <- 1 / (1 + exp(-eta_humid))
# Get fitted values from dry humidity data
eta_dry <- predict(dry_mod, newdata_mean)
p_hat_dry <- 1 / (1 + exp(-eta_dry))
# Plot
plot(x = data$zmax,
y = data$mortality,
xlab = "Crown Height (m)",
ylab = "Proportion of Mortality")
lines(x = newdata_mean$zmax, y = p_hat_mean)
lines(x = newdata_mean$zmax, y = p_hat_humid)
lines(x = newdata_mean$zmax, y = p_hat_dry)
# Get the SE for mean model
se_mean <- predict(mean_mod, newdata_mean, type = "link", se.fit = TRUE)$se.fit
# Right upper 95% CI
mean_up <- 1 / (1 + exp(-(eta + 2.576*se_mean)))
# Right lower 95% CI
mean_lo <- 1 / (1 + exp(-(eta - 2.576*se_mean)))
# Right upper 95% CI
mean_up <- 1 / (1 + exp(-(eta + 2.576*se_mean)))
# Right lower 95% CI
mean_lo <- 1 / (1 + exp(-(eta - 2.576*se_mean)))
# Get the SE for mean model
se_mean <- predict(mean_mod, newdata_mean, type = "link", se.fit = TRUE)$se.fit
se_mean
# Right upper 95% CI
mean_up <- 1 / (1 + exp(-(eta + 2.576*se_mean)))
# Right lower 95% CI
mean_lo <- 1 / (1 + exp(-(eta - 2.576*se_mean)))
plot(x = data$zmax,
y = data$mortality,
xlab = "Crown Height (m)",
ylab = "Proportion of Mortality")
lines(x = newdata_mean$zmax, y = p_hat_mean, col = "red")
lines(x = newdata_mean$zmax, y = mean_up, lty = 2)
lines(x = newdata_mean$zmax, y = mean_lo, lty = 2)
lines(x = newdata_mean$zmax, y = p_hat_humid, col = "green")
lines(x = newdata_mean$zmax, y = p_hat_dry, col = "blue")
# Get fitted values from mean humidity data
newdata_mean <- data.frame(zmax = seq(min(data$zmax), max(data$zmax)))
newdata_mean
View(newdata_mean)
eta_mean <- predict(mean_mod, newdata_mean)
p_hat_mean <- 1 / (1 + exp(-eta_mean))
# Get fitted values from humid humidity data
eta_humid <- predict(humid_mod, newdata_mean)
p_hat_humid <- 1 / (1 + exp(-eta_humid))
# Get fitted values from dry humidity data
eta_dry <- predict(dry_mod, newdata_mean)
p_hat_dry <- 1 / (1 + exp(-eta_dry))
plot(x = data$zmax,
y = data$mortality,
xlab = "Crown Height (m)",
ylab = "Proportion of Mortality")
lines(x = newdata_mean, y = p_hat_mean, col = "red")
plot(x = data$zmax,
y = data$mortality,
xlab = "Crown Height (m)",
ylab = "Proportion of Mortality")
lines(x = seq(0,72), y = p_hat_mean, col = "red")
# Get fitted values from mean humidity data
newdata_mean <- data.frame(zmax = seq(min(data$zmax), max(data$zmax)))
eta_mean <- predict(mean_mod, newdata_mean)
p_hat_mean <- 1 / (1 + exp(-eta_mean))
# Get fitted values from humid humidity data
eta_humid <- predict(humid_mod, newdata_mean)
p_hat_humid <- 1 / (1 + exp(-eta_humid))
# Get fitted values from dry humidity data
eta_dry <- predict(dry_mod, newdata_mean)
p_hat_dry <- 1 / (1 + exp(-eta_dry))
# Get the SE for mean model
se_mean <- predict(mean_mod, newdata_mean, type = "link", se.fit = TRUE)$se.fit
# Right upper 95% CI
mean_up <- 1 / (1 + exp(-(eta + 2.576*se_mean)))
# Right lower 95% CI
mean_lo <- 1 / (1 + exp(-(eta - 2.576*se_mean)))
seq(5,72)
length(seq(5,72))
plot(x = data$zmax,
y = data$mortality,
xlab = "Crown Height (m)",
ylab = "Proportion of Mortality")
lines(x = seq(5,71), y = p_hat_mean, col = "red")
lines(x = seq(5,71), y = mean_up, lty = 2, col = "pink")
lines(x = seq(5,71), y = mean_lo, lty = 2, col = "pink")
lines(x = seq(5,71), y = p_hat_humid, col = "green")
lines(x = seq(5,71), y = p_hat_dry, col = "blue")
p_hat_mean
# Get fitted values from mean humidity data
newdata_mean <- data.frame(zmax = seq(min(data$zmax), max(data$zmax)))
View(newdata_mean)
# Get fitted values from mean humidity data
newdata_mean <- data.frame(zmax = seq(0,72))
# Get fitted values from mean humidity data
newdata_mean <- data.frame(zmax = seq(0,72))
eta_mean <- predict(mean_mod, newdata_mean)
p_hat_mean <- 1 / (1 + exp(-eta_mean))
eta_mean <- predict(mean_mod, newdata_mean)
p_hat_mean <- 1 / (1 + exp(-eta_mean))
# Get fitted values from humid humidity data
eta_humid <- predict(humid_mod, newdata_mean)
p_hat_humid <- 1 / (1 + exp(-eta_humid))
# Get fitted values from dry humidity data
eta_dry <- predict(dry_mod, newdata_mean)
p_hat_dry <- 1 / (1 + exp(-eta_dry))
# Get the SE for mean model
se_mean <- predict(mean_mod, newdata_mean, type = "link", se.fit = TRUE)$se.fit
# Right upper 95% CI
mean_up <- 1 / (1 + exp(-(eta + 2.576*se_mean)))
# Right lower 95% CI
mean_lo <- 1 / (1 + exp(-(eta - 2.576*se_mean)))
plot(x = data$zmax,
y = data$mortality,
xlab = "Crown Height (m)",
ylab = "Proportion of Mortality")
lines(x = seq(0,72), y = p_hat_mean, col = "red")
lines(x = seq(0,72), y = mean_up, lty = 2, col = "pink")
lines(x = seq(0,72), y = mean_lo, lty = 2, col = "pink")
lines(x = seq(0,72), y = p_hat_humid, col = "green")
lines(x = seq(0,72), y = p_hat_dry, col = "blue")
# Get fitted values from mean humidity data
newdata_mean <- data.frame(zmax = seq(0,71))
eta_mean <- predict(mean_mod, newdata_mean)
p_hat_mean <- 1 / (1 + exp(-eta_mean))
# Get fitted values from humid humidity data
eta_humid <- predict(humid_mod, newdata_mean)
p_hat_humid <- 1 / (1 + exp(-eta_humid))
# Get fitted values from dry humidity data
eta_dry <- predict(dry_mod, newdata_mean)
p_hat_dry <- 1 / (1 + exp(-eta_dry))
# Get the SE for mean model
se_mean <- predict(mean_mod, newdata_mean, type = "link", se.fit = TRUE)$se.fit
# Right upper 95% CI
mean_up <- 1 / (1 + exp(-(eta + 2.576*se_mean)))
# Right lower 95% CI
mean_lo <- 1 / (1 + exp(-(eta - 2.576*se_mean)))
plot(x = data$zmax,
y = data$mortality,
xlab = "Crown Height (m)",
ylab = "Proportion of Mortality")
lines(x = seq(0,71), y = p_hat_mean, col = "red")
lines(x = seq(0,71), y = mean_up, lty = 2, col = "pink")
lines(x = seq(0,71), y = mean_lo, lty = 2, col = "pink")
lines(x = seq(0,71), y = p_hat_humid, col = "green")
lines(x = seq(0,71), y = p_hat_dry, col = "blue")
mean_up
se_mean
# Get the SE for mean model
se_mean <- predict(mean_mod, newdata_mean, type = "link", se.fit = TRUE)$se.fit
# Right upper 95% CI
mean_up <- 1 / (1 + exp(-(eta_mean + 2.576*se_mean)))
plot(x = data$zmax,
y = data$mortality,
xlab = "Crown Height (m)",
ylab = "Proportion of Mortality")
lines(x = seq(0,71), y = p_hat_mean, col = "red")
lines(x = seq(0,71), y = mean_up, lty = 2, col = "pink")
lines(x = seq(0,71), y = mean_lo, lty = 2, col = "pink")
lines(x = seq(0,71), y = p_hat_humid, col = "green")
lines(x = seq(0,71), y = p_hat_dry, col = "blue")
# Right lower 95% CI
mean_lo <- 1 / (1 + exp(-(eta_mean - 2.576*se_mean)))
plot(x = data$zmax,
y = data$mortality,
xlab = "Crown Height (m)",
ylab = "Proportion of Mortality")
lines(x = seq(0,71), y = p_hat_mean, col = "red")
lines(x = seq(0,71), y = mean_up, lty = 2, col = "pink")
lines(x = seq(0,71), y = mean_lo, lty = 2, col = "pink")
lines(x = seq(0,71), y = p_hat_humid, col = "green")
lines(x = seq(0,71), y = p_hat_dry, col = "blue")
# Get the SE for mean model
se_mean <- predict(mean_mod, newdata_mean, type = "link", se.fit = TRUE)$se.fit
# Get the SE for mean model
se_mean <- predict(mean_mod, newdata_mean, type = "link", se.fit = TRUE)$se.fit
se_dry <- predict(dry_mod, newdata_mean, type = "link", se.fit = TRUE)$se.fit
se_humid <- predict(humid_mod, newdata_mean, type = "link", se.fit = TRUE)$se.fit
dry_up <- 1 / (1 + exp(-(eta_dry + 2.576*se_dry)))
humid_up <- 1 / (1 + exp(-(eta_humid + 2.576*se_humid)))
# Right lower 95% CI
mean_lo <- 1 / (1 + exp(-(eta_mean - 2.576*se_mean)))
humid_lo <- 1 / (1 + exp(-(eta_humid - 2.576*se_humid)))
plot(x = data$zmax,
y = data$mortality,
xlab = "Crown Height (m)",
ylab = "Proportion of Mortality")
lines(x = seq(0,71), y = p_hat_mean, col = "red")
lines(x = seq(0,71), y = mean_up, lty = 2, col = "red")
lines(x = seq(0,71), y = mean_lo, lty = 2, col = "red")
lines(x = seq(0,71), y = p_hat_humid, col = "green")
lines(x = seq(0,71), y = humid_up, lty = 2, col = "green")
lines(x = seq(0,71), y = humid_lo, lty = 2, col = "green")
lines(x = seq(0,71), y = p_hat_dry, col = "blue")
lines(x = seq(0,71), y = dry_up, lty = 2, col = "blue")
lines(x = seq(0,71), y = dry_lo, lty = 2, col = "blue")
dry_lo <- 1 / (1 + exp(-(eta_dry - 2.576*se_dry)))
plot(x = data$zmax,
y = data$mortality,
xlab = "Crown Height (m)",
ylab = "Proportion of Mortality")
lines(x = seq(0,71), y = p_hat_mean, col = "red")
lines(x = seq(0,71), y = mean_up, lty = 2, col = "red")
lines(x = seq(0,71), y = mean_lo, lty = 2, col = "red")
lines(x = seq(0,71), y = p_hat_humid, col = "green")
lines(x = seq(0,71), y = humid_up, lty = 2, col = "green")
lines(x = seq(0,71), y = humid_lo, lty = 2, col = "green")
lines(x = seq(0,71), y = p_hat_dry, col = "blue")
lines(x = seq(0,71), y = dry_up, lty = 2, col = "blue")
lines(x = seq(0,71), y = dry_lo, lty = 2, col = "blue")
# Chi squared test
## residuals
ee <- residuals(crown_height_mod, type = "response")
## fitted values
y_hat <- fitted(crown_height_mod)
## standardized residuals
rr <- ee / (y_hat * (1 - y_hat))
## test stat
x2 <- sum(rr)
## chi^2 test
pchisq(x2, length(data$zmax) - length(coef(crown_height_mod)) - 1, lower.tail = FALSE)
# Chi squared test
lambda <- D - D_poly
p_value <- pchisq(lambda, 1, lower.tail = FALSE)
p_value
D
D_poly
# Chi squared test
lambda <- D - D_poly
p_value <- pchisq(lambda, 1, lower.tail = FALSE)
p_value
mean$pro_survival <- predict(interaction_mod, mean, type = "link")
View(mean)
mean$pro_survival <- predict(interaction_mod, mean, type = "response")
plot(x = mean$zmax,
y = mean$pro_survival,
xlab = "Crown Height (m)",
ylab = "Proportion of Mortality")
mean$pro_survival <- predict(interaction_mod, mean, type = "link")
mean$pro_survival <- predict(interaction_mod, mean, type = "link")
p_hat_mean_test <- 1 / (1 + exp(-mean$pro_survival))
plot(x = mean$zmax,
y = p_hat_mean_test,
xlab = "Crown Height (m)",
ylab = "Proportion of Mortality")
# Mean drought calculations
mean_vpdmax <- median(data$vpdmax)
mean <-subset(data, vpdmax == mean_vpdmax)
mean$pro_survival <- predict(interaction_mod, mean, type = "link")
p_hat_mean <- 1 / (1 + exp(-mean$pro_survival))
# Dry calculations
dry_vpdmax <- quantile(data$vpdmax, 0.85)
dry <- subset(data, vpdmax == dry_vpdmax)
dry$pro_survival <- predict(interaction_mod, dry, type = "link")
p_hat_dry <- 1 / (1 + exp(-dry$pro_survival))
# Mean drought calculations
mean_vpdmax <- median(data$vpdmax)
mean <-subset(data, vpdmax == mean_vpdmax)
mean$pro_survival <- predict(interaction_mod, mean, type = "link")
p_hat_mean <- 1 / (1 + exp(-mean$pro_survival))
# Dry calculations
dry_vpdmax <- quantile(data$vpdmax, 0.85)
dry <- subset(data, vpdmax == dry_vpdmax)
dry$pro_survival <- predict(interaction_mod, dry, type = "link")
p_hat_dry <- 1 / (1 + exp(-dry$pro_survival))
# Humid calculations
humid_vpdmax <- quantile(data$vpdmax, 0.15)
humid <- subset(data, vpdmax == humid_vpdmax)
humid$pro_survival <- predict(interaction_mod, dry, type = "link")
humid$pro_survival <- predict(interaction_mod, humid, type = "link")
p_hat_humid <- 1 / (1 + exp(-humid$pro_survival))
plot(x = data$zmax,
y = data$mortality,
xlab = "Crown Height (m)",
ylab = "Proportion of Mortality")
lines(x = mean$pro_survival, y = p_hat_mean, col = "red")
#lines(x = seq(0,71), y = mean_up, lty = 2, col = "red")
#lines(x = seq(0,71), y = mean_lo, lty = 2, col = "red")
lines(x = humid$pro_survival, y = p_hat_humid, col = "green")
#lines(x = seq(0,71), y = humid_up, lty = 2, col = "green")
#lines(x = seq(0,71), y = humid_lo, lty = 2, col = "green")
lines(x = dry$pro_survival, y = p_hat_dry, col = "blue")
#lines(x = seq(0,71), y = dry_up, lty = 2, col = "blue")
#lines(x = seq(0,71), y = dry_lo, lty = 2, col = "blue")
plot(x = data$zmax,
y = data$mortality,
xlab = "Crown Height (m)",
ylab = "Proportion of Mortality")
lines(x = mean$pro_survival, y = p_hat_mean, col = "red")
#lines(x = seq(0,71), y = mean_up, lty = 2, col = "red")
#lines(x = seq(0,71), y = mean_lo, lty = 2, col = "red")
lines(x = humid$pro_survival, y = p_hat_humid, col = "green")
#lines(x = seq(0,71), y = humid_up, lty = 2, col = "green")
#lines(x = seq(0,71), y = humid_lo, lty = 2, col = "green")
lines(x = dry$pro_survival, y = p_hat_dry, col = "blue")
#lines(x = seq(0,71), y = dry_up, lty = 2, col = "blue")
#lines(x = seq(0,71), y = dry_lo, lty = 2, col = "blue")
plot(x = mean$pro_survival,
y = p_hat_mean,
xlab = "Crown Height (m)",
ylab = "Proportion of Mortality",
col = "red")
lines(x = humid$pro_survival, y = p_hat_humid, col = "green")
lines(x = dry$pro_survival, y = p_hat_dry, col = "blue")
plot(x = mean$pro_survival,
y = p_hat_mean,
xlab = "Crown Height (m)",
ylab = "Proportion of Mortality",
col = "red",
type = "l")
lines(x = humid$pro_survival, y = p_hat_humid, col = "green", type = "l")
lines(x = dry$pro_survival, y = p_hat_dry, col = "blue", type = "l")
# Mean drought calculations
mean_vpdmax <- median(data$vpdmax)
mean <-subset(data, vpdmax == mean_vpdmax)
mean$pro_survival <- predict(interaction_mod, mean, type = "link")
p_hat_mean <- 1 / (1 + exp(-mean$pro_survival))
# Dry calculations
dry_vpdmax <- quantile(data$vpdmax, 0.85)
dry <- subset(data, vpdmax == dry_vpdmax)
dry$pro_survival <- predict(interaction_mod, dry, type = "link")
p_hat_dry <- 1 / (1 + exp(-dry$pro_survival))
# Humid calculations
humid_vpdmax <- quantile(data$vpdmax, 0.15)
humid <- subset(data, vpdmax == humid_vpdmax)
humid$pro_survival <- predict(interaction_mod, humid, type = "link")
p_hat_humid <- 1 / (1 + exp(-humid$pro_survival))
plot(x = mean$pro_survival,
y = p_hat_mean,
xlab = "Crown Height (m)",
ylab = "Proportion of Mortality",
col = "red",
type = "l")
lines(x = humid$pro_survival, y = p_hat_humid, col = "green", type = "l")
lines(x = dry$pro_survival, y = p_hat_dry, col = "blue", type = "l")
View(dry)
humid$pro_survival
plot(x = mean$zmax,
y = p_hat_mean,
xlab = "Crown Height (m)",
ylab = "Proportion of Mortality",
col = "red",
type = "l")
lines(x = humid$zmax, y = p_hat_humid, col = "green", type = "l")
lines(x = dry$zmax, y = p_hat_dry, col = "blue", type = "l")
# Plot
plot(x = mean$zmax,
y = p_hat_mean,
xlab = "Crown Height (m)",
ylab = "Proportion of Mortality",
col = "red")
lines(x = humid$zmax, y = p_hat_humid, col = "green")
lines(x = dry$zmax, y = p_hat_dry, col = "blue")
plot(x = mean$zmax,
y = p_hat_mean,
xlab = "Crown Height (m)",
ylab = "Proportion of Mortality",
col = "red")
lines(x = humid$zmax, y = p_hat_humid, col = "green")
lines(x = dry$zmax, y = p_hat_dry, col = "blue")
se_mean
se_mean <- predict(interaction_mod, mean, type = "link")$se.fit
# SE and CI calculations
se_mean <- predict(interaction_mod, mean, type = "link", se.fit = TRUE)$se.fit
se_mean
# SE and CI calculations
se_mean <- predict(interaction_mod, mean, type = "link", se.fit = TRUE)$se.fit
se_dry <- predict(interaction_mod, dry, type = "link", se.fit = TRUE)$se.fit
se_humid <- predict(interaction_mod, humid, type = "link", se.fit = TRUE)$se.fit
# SE and CI calculations
se_mean <- predict(interaction_mod, mean, type = "link", se.fit = TRUE)$se.fit
se_dry <- predict(interaction_mod, dry, type = "link", se.fit = TRUE)$se.fit
se_humid <- predict(interaction_mod, humid, type = "link", se.fit = TRUE)$se.fit
# Right upper 95% CI
mean_up <- 1 / (1 + exp(-(mean$pro_survival + 2.576*se_mean)))
dry_up <- 1 / (1 + exp(-(dry$pro_survival + 2.576*se_dry)))
humid_up <- 1 / (1 + exp(-(humid$pro_survival + 2.576*se_humid)))
# Right lower 95% CI
mean_lo <- 1 / (1 + exp(-(mean$pro_survival - 2.576*se_mean)))
dry_lo <- 1 / (1 + exp(-(dry$pro_survival - 2.576*se_dry)))
humid_lo <- 1 / (1 + exp(-(humid$pro_survival - 2.576*se_humid)))
plot(x = mean$zmax,
y = p_hat_mean,
xlab = "Crown Height (m)",
ylab = "Proportion of Mortality",
col = "red")
lines(x = mean$zmax, y = mean_up, lty = 2, col = "red")
lines(x = mean$zmax, y = mean_lo, lty = 2, col = "red")
lines(x = humid$zmax, y = p_hat_humid, col = "green")
lines(x = humid$zmax, y = humid_up, lty = 2, col = "green")
lines(x = humid$zmax, y = humid_lo, lty = 2, col = "green")
lines(x = dry$zmax, y = p_hat_dry, col = "blue")
lines(x = dry$zmax, y = dry_up, lty = 2, col = "blue")
lines(x = dry$zmax, y = dry_lo, lty = 2, col = "blue")
plot(x = mean$zmax,
y = p_hat_mean,
xlab = "Crown Height (m)",
ylab = "Proportion of Mortality",
col = "red")
lines(x = mean$zmax, y = mean_up, lty = 2, col = "red")
lines(x = mean$zmax, y = mean_lo, lty = 2, col = "red")
lines(x = humid$zmax, y = p_hat_humid, col = "green")
lines(x = humid$zmax, y = humid_up, lty = 2, col = "green")
lines(x = humid$zmax, y = humid_lo, lty = 2, col = "green")
lines(x = dry$zmax, y = p_hat_dry, col = "blue")
lines(x = dry$zmax, y = dry_up, lty = 2, col = "blue")
lines(x = dry$zmax, y = dry_lo, lty = 2, col = "blue")
plot(x = mean$zmax,
y = p_hat_mean,
xlab = "Crown Height (m)",
ylab = "Proportion of Mortality",
type = "n")  # Set up the plot without drawing points
# Adding lines for the mean data
lines(x = mean$zmax, y = p_hat_mean, col = "red")
lines(x = mean$zmax, y = mean_up, lty = 2, col = "red")
lines(x = mean$zmax, y = mean_lo, lty = 2, col = "red")
# Adding lines for the humid data
lines(x = humid$zmax, y = p_hat_humid, col = "green")
lines(x = humid$zmax, y = humid_up, lty = 2, col = "green")
lines(x = humid$zmax, y = humid_lo, lty = 2, col = "green")
# Adding lines for the dry data
lines(x = dry$zmax, y = p_hat_dry, col = "blue")
lines(x = dry$zmax, y = dry_up, lty = 2, col = "blue")
lines(x = dry$zmax, y = dry_lo, lty = 2, col = "blue")
plot(x = mean$zmax,
y = p_hat_mean,
xlab = "Crown Height (m)",
ylab = "Proportion of Mortality",
type = "n")  # Set up the plot without drawing points
lines(mean$zmax, p_hat_mean, col = "red", lwd = 1)
lines(mean$zmax, mean_up, lty = 2, col = "red", lwd = 1)
lines(mean$zmax, mean_lo, lty = 2, col = "red", lwd = 1)
# Adding lines for the humid data with specified line width
lines(humid$zmax, p_hat_humid, col = "green", lwd = 1)
lines(humid$zmax, humid_up, lty = 2, col = "green", lwd = 1)
lines(humid$zmax, humid_lo, lty = 2, col = "green", lwd = 1)
# Adding lines for the dry data with specified line width
lines(dry$zmax, p_hat_dry, col = "blue", lwd = 1)
lines(dry$zmax, dry_up, lty = 2, col = "blue", lwd = 1)
lines(dry$zmax, dry_lo, lty = 2, col = "blue", lwd = 1)
plot(x = mean$zmax,
y = p_hat_mean,
xlab = "Crown Height (m)",
ylab = "Proportion of Mortality",
type = "n")  # Set up the plot without drawing points
lines(mean$zmax, p_hat_mean, col = "red", lwd = 1)
lines(mean$zmax, mean_up, lty = 2, col = "red", lwd = 1)
lines(mean$zmax, mean_lo, lty = 2, col = "red", lwd = 1)
# Adding lines for the humid data with specified line width
lines(humid$zmax, p_hat_humid, col = "green", lwd = 1)
lines(humid$zmax, humid_up, lty = 2, col = "green", lwd = 1)
lines(humid$zmax, humid_lo, lty = 2, col = "green", lwd = 1)
# Adding lines for the dry data with specified line width
lines(dry$zmax, p_hat_dry, col = "blue", lwd = 1)
lines(dry$zmax, dry_up, lty = 2, col = "blue", lwd = 1)
lines(dry$zmax, dry_lo, lty = 2, col = "blue", lwd = 1)
# Ensure data is sorted by zmax
mean <- mean[order(mean$zmax), ]
dry <- dry[order(dry$zmax), ]
# Set up the plot without drawing any points
plot(mean$zmax, p_hat_mean, type = "n",
xlab = "Crown Height (m)",
ylab = "Proportion of Mortality")
plot(mean$zmax, p_hat_mean, type = "n",
xlab = "Crown Height (m)",
ylab = "Proportion of Mortality")
# Adding lines for the mean data
lines(mean$zmax, p_hat_mean, col = "red")
lines(mean$zmax, mean_up, lty = 2, col = "red")
lines(mean$zmax, mean_lo, lty = 2, col = "red")
setwd("~/Documents/GitHub/CSIA_lab_work/data/final")
# Load packages
library(tidyverse)
library(mgcv)
# Load data
data <- read.csv(file = "trophic_position.csv")
#define beta and TDF values
beta <- 3.4 #commonly used constant
TDF <- 7.06 #from Lerner et al 2020
#### GAM Method ####
# Plot of PHE with smooth GAM
ggplot(data, aes(x = Year, y = PHE.mean, col = System)) +
geom_point() +
geom_smooth(method = "gam", formula = y ~ s(x), col = "red") +
theme_minimal()
# Run GAM on PHE through time
gam_model_phe <- gam(PHE.mean ~ s(Year), data = data)
summary(gam_model_phe)
# Plot of TP with smooth GAM as PHE baseline
ggplot(data, aes(x = Year, y = TP.GAM.Method)) +
geom_point() +
geom_smooth(method = "gam", formula = y ~ s(x), se = FALSE) +
theme_minimal() +
labs(title = "GAM Baseline Method", x = "Year", y = "Trophic Position")
